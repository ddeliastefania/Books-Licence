{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/book.ts","app/models/profile.ts","app/stores/bookStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/books/dashboard/BookFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/Profile.Card.tsx","features/books/dashboard/BookListItemAttendee.tsx","features/books/dashboard/BookListItem.tsx","features/books/dashboard/BookList.tsx","features/books/dashboard/BookListItemPlaceholder.tsx","features/books/dashboard/BookDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/books/form/BookForm.tsx","features/books/details/BookDetailedChat.tsx","features/books/details/BookDetailedInfo.tsx","features/books/details/BookDetailedSidebar.tsx","features/books/details/BookDetaledHeader.tsx","features/books/details/BookDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileBooks.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/photoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Books","list","params","details","id","create","book","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listBooks","Book","init","Object","assign","BookFormValues","undefined","title","author","category","description","date","language","Profile","displayName","image","BookStore","bookRegistry","Map","selectedBook","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadBooks","axiosParams","result","setBook","setPagination","setLoadingInitial","console","log","loadBook","getBook","runInAction","userStore","isReading","attendees","some","isHost","hostUsername","host","find","x","Date","state","createBook","attendee","newBook","updateBook","updatedBook","deleteBook","updateAttendance","filter","cancelBookToggle","isCancelled","clearSelectedBook","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","booksByDate","reduce","books","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userBooks","loadingBooks","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","bookStore","followingCount","loadFollowings","loadUserBooks","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","bookId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","BookListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedBooks","group","sub","BookListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","ribbon","Extra","bookImageStyle","bookImageTextStyle","bottom","left","height","padding","zIndex","top","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dropZoneStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","BookDashboard","BookDetails","BookForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6ad6ffa6.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Book, BookFormValues } from \"../models/book\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserBook } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if(process.env.NODE_ENV === 'development')  await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Books = {\r\n  list: (params: URLSearchParams) =>\r\n    axios.get<PaginatedResult<Book[]>>(\"/books\", { params }).then(responseBody),\r\n  details: (id: string) => requests.get<Book>(`/books/${id}`),\r\n  create: (book: BookFormValues) => requests.post<void>(\"/books\", book),\r\n  update: (book: BookFormValues) =>\r\n    requests.put<void>(`/books/${book.id}`, book),\r\n  delete: (id: string) => requests.del<void>(`/books/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/books/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listBooks: (username: string, predicate: string) =>\r\n    requests.get<UserBook[]>(\r\n      `/profiles/${username}/books?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Books,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Book {\r\n  id: string;\r\n  title: string;\r\n  author: string;\r\n  date: Date | null;\r\n  category: string;\r\n  description: string;\r\n  language: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isReading: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\nexport class Book implements Book {\r\n  constructor(init?: BookFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\nexport class BookFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  author: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  language: string = \"\";\r\n\r\n  constructor(book?: BookFormValues) {\r\n    if (book) {\r\n      this.id = book.id;\r\n      this.title = book.title;\r\n      this.author = book.author;\r\n      this.category = book.category;\r\n      this.description = book.description;\r\n      this.date = book.date;\r\n      this.language = book.language;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserBook {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Book, BookFormValues } from \"../models/book\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class BookStore {\r\n  bookRegistry = new Map<string, Book>();\r\n  selectedBook: Book | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.bookRegistry.clear();\r\n        this.loadBooks();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get booksByDate() {\r\n    return Array.from(this.bookRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedBooks() {\r\n    return Object.entries(\r\n      this.booksByDate.reduce((books, book) => {\r\n        const date = format(book.date!, \"dd MMM yyyy\");\r\n        books[date] = books[date] ? [...books[date], book] : [book];\r\n        return books;\r\n      }, {} as { [key: string]: Book[] })\r\n    );\r\n  }\r\n\r\n  loadBooks = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Books.list(this.axiosParams);\r\n      result.data.forEach((book) => {\r\n        this.setBook(book);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadBook = async (id: string) => {\r\n    let book = this.getBook(id);\r\n    if (book) {\r\n      this.selectedBook = book;\r\n      return book;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        book = await agent.Books.details(id);\r\n        this.setBook(book);\r\n        runInAction(() => {\r\n          this.selectedBook = book;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return book;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setBook = (book: Book) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      book.isReading = book.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      book.isHost = book.hostUsername === user.username;\r\n      book.host = book.attendees?.find((x) => x.username === book.hostUsername);\r\n    }\r\n    book.date = new Date(book.date!);\r\n    this.bookRegistry.set(book.id, book);\r\n  };\r\n\r\n  private getBook = (id: string) => {\r\n    return this.bookRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createBook = async (book: BookFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Books.create(book);\r\n      const newBook = new Book(book);\r\n      newBook.hostUsername = user!.username;\r\n      newBook.attendees = [attendee];\r\n      this.setBook(newBook);\r\n      runInAction(() => {\r\n        this.selectedBook = newBook;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateBook = async (book: BookFormValues) => {\r\n    try {\r\n      await agent.Books.update(book);\r\n      runInAction(() => {\r\n        if (book.id) {\r\n          let updatedBook = { ...this.getBook(book.id), ...book };\r\n          this.bookRegistry.set(book.id, updatedBook as Book);\r\n          this.selectedBook = updatedBook as Book;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteBook = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Books.delete(id);\r\n      runInAction(() => {\r\n        this.bookRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Books.attend(this.selectedBook!.id);\r\n      runInAction(() => {\r\n        if (this.selectedBook?.isReading) {\r\n          this.selectedBook.attendees = this.selectedBook.attendees?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedBook.isReading = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedBook?.attendees?.push(attendee);\r\n          this.selectedBook!.isReading = true;\r\n        }\r\n        this.bookRegistry.set(this.selectedBook!.id, this.selectedBook!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelBookToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Books.attend(this.selectedBook!.id);\r\n      runInAction(() => {\r\n        this.selectedBook!.isCancelled = !this.selectedBook?.isCancelled;\r\n        this.bookRegistry.set(this.selectedBook!.id, this.selectedBook!);\r\n      });\r\n    } catch (error) {\r\n      console.error();\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedBook = () => {\r\n    this.selectedBook = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.bookRegistry.forEach((book) => {\r\n      book.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserBook } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userBooks: UserBook[] = [];\r\n  loadingBooks = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.bookStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserBooks = async (username: string, predicate?: string) => {\r\n    this.loadingBooks = true;\r\n    try {\r\n      const books = await agent.Profiles.listBooks(username, predicate!);\r\n      runInAction(() => {\r\n        this.userBooks = books;\r\n        this.loadingBooks = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingBooks = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/books\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/books\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport BookStore from \"./bookStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  bookStore: BookStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  bookStore: new BookStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (bookId: string) => {\r\n    if (store.bookStore.selectedBook) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?bookId=\" + bookId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) => console.log(\"Error establishing the connection\"));\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection:\", error));\r\n  };\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n  addComment = async (values: any) => {\r\n    values.bookId = store.bookStore.selectedBook?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Books\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/books\" name=\"Books\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createBook\"\r\n            positive\r\n            content=\"Create Book\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function BookFilters() {\r\n  const {\r\n    bookStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 26 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All books\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I will read this/these\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I added this books\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/Profile.Card\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function BookListItemAttendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: \"green\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee}></ProfileCard>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Book } from \"../../../app/models/book\";\r\nimport { format } from \"date-fns\";\r\nimport BookListItemAttendee from \"./BookListItemAttendee\";\r\n\r\ninterface Props {\r\n  book: Book;\r\n}\r\nexport default function BookListItem({ book }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {book.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={book.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/books/${book.id}`}>\r\n                {book.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Added by{\" \"}\r\n                <Link to={`/profiles/${book.hostUsername}`}>\r\n                  {book.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {book.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this book\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {book.isReading && !book.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to read this book\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(book.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"book\" />\r\n          {book.category}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <BookListItemAttendee attendees={book.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{book.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/books/${book.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport BookListItem from \"./BookListItem\";\r\n\r\nexport default observer(function BookList() {\r\n  const { bookStore } = useStore();\r\n  const { groupedBooks } = bookStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedBooks.map(([group, books]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {books.map((book) => (\r\n            <BookListItem key={book.id} book={book} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function BookListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport BookFilters from \"./BookFilters\";\r\nimport BookList from \"./BookList\";\r\nimport BookListItemPlaceholder from \"./BookListItemPlaceholder\";\r\n\r\nexport default observer(function BookDashboard() {\r\n  const { bookStore } = useStore();\r\n  const { loadBooks, bookRegistry, setPagingParams, pagination } = bookStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadBooks().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (bookRegistry.size <= 1) loadBooks();\r\n  }, [bookRegistry.size, loadBooks]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {bookStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <BookListItemPlaceholder />\r\n            <BookListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            {\" \"}\r\n            <BookList />\r\n          </InfiniteScroll>\r\n        )}\r\n        ;\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <BookFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {\" \"}\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password!\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Books app\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Books app\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"DisplayName\" />\r\n          <MyTextInput name=\"username\" placeholder=\"UserName\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Books\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Books!\" />\r\n            <Button as={Link} to=\"/books\" size=\"huge\" inverted>\r\n              Go to Books Page!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register here!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading ...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {\" \"}\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {\" \"}\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  {\r\n    text: \"Kids\",\r\n    value: \"kids\",\r\n  },\r\n  {\r\n    text: \"Travel\",\r\n    value: \"travel\",\r\n  },\r\n  {\r\n    text: \"Culture\",\r\n    value: \"culture\",\r\n  },\r\n  {\r\n    text: \"Food\",\r\n    value: \"food\",\r\n  },\r\n  {\r\n    text: \"Knowledge\",\r\n    value: \"knowledge\",\r\n  },\r\n  {\r\n    text: \"Horror\",\r\n    value: \"horror\",\r\n  },\r\n  {\r\n    text: \"Mister\",\r\n    value: \"mister\",\r\n  },\r\n  {\r\n    text: \"Dragoste\",\r\n    value: \"dragoste\",\r\n  },\r\n  {\r\n    text: \"Cooking\",\r\n    value: \"cooking\",\r\n  },\r\n  {\r\n    text: \"History\",\r\n    value: \"history\",\r\n  },\r\n  {\r\n    text: \"Parenting\",\r\n    value: \"parenting\",\r\n  },\r\n  {\r\n    text: \"SF\",\r\n    value: \"sf\",\r\n  },\r\n  {\r\n    text: \"Art\",\r\n    value: \"art\",\r\n  },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {\" \"}\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { BookFormValues } from \"../../../app/models/book\";\r\n\r\nexport default observer(function BookForm() {\r\n  const history = useHistory();\r\n  const { bookStore } = useStore();\r\n  const { loadBook, loadingInitial, createBook, updateBook } = bookStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [book, setBook] = useState<BookFormValues>(new BookFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The book title is required!\"),\r\n    description: Yup.string().required(\"The book description is required!\"),\r\n    category: Yup.string().required(\"The book category is required!\"),\r\n    author: Yup.string().required(\"The book author is required!\"),\r\n    language: Yup.string().required(\"The book language is required!\"),\r\n    date: Yup.string().required(\"The book date is required!\").nullable(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadBook(id).then((book) => setBook(new BookFormValues(book)));\r\n  }, [id, loadBook]);\r\n\r\n  function handleFormSubmit(book: BookFormValues) {\r\n    if (!book.id) {\r\n      let newBook = {\r\n        ...book,\r\n        id: uuid(),\r\n      };\r\n      createBook(newBook).then(() => history.push(`/books/${newBook.id}`));\r\n    } else {\r\n      updateBook(book).then(() => history.push(`/books/${book.id}`));\r\n    }\r\n  }\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Loading component ...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Book Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={book}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextInput placeholder=\"Author\" name=\"author\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"More Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"Language\" name=\"language\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              name=\"title\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to={\"/books\"}\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  bookId: string;\r\n}\r\n\r\nexport default observer(function BookDetailedChat({\r\n  bookId: bookId,\r\n}: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (bookId) {\r\n      commentStore.createHubConnection(bookId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, bookId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Let's talk about this book</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Book } from \"../../../app/models/book\";\r\nimport {format} from \"date-fns\";\r\n\r\ninterface Props {\r\n  book: Book;\r\n}\r\n\r\nexport default observer(function BookDetailedInfo({ book }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{book.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(book.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {book.author}, {book.language}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Book } from \"../../../app/models/book\";\r\n\r\ninterface Props {\r\n  book: Book;\r\n}\r\n\r\nexport default observer(function BookDetailedSidebar({\r\n  book: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"person\" : \"people\"} are\r\n        reading this book\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && \r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                }\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Book } from \"../../../app/models/book\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst bookImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst bookImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  book: Book;\r\n}\r\n\r\nexport default observer(function BookDetailedHeader({ book }: Props) {\r\n  const {\r\n    bookStore: { updateAttendance, loading, cancelBookToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {book.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${book.category}.jpg`}\r\n          fluid\r\n          style={bookImageStyle}\r\n        />\r\n        <Segment style={bookImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={book.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(book.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Created/Added by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${book.host?.username}`}>\r\n                      {book.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {book.isHost ? (\r\n          <>\r\n            <Button\r\n              color={book.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={book.isCancelled ? \"Re-activate Book\" : \"Cancel Book\"}\r\n              onClick={cancelBookToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={book.isCancelled}\r\n              to={`/manage/${book.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              See more details about this book\r\n            </Button>\r\n          </>\r\n        ) : book.isReading ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Not interest anymore\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={book.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            See the book now\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport BookDetailedChat from \"./BookDetailedChat\";\r\nimport BookDetailedInfo from \"./BookDetailedInfo\";\r\nimport BookDetailedSidebar from \"./BookDetailedSidebar\";\r\nimport BookDetailedHeader from \"./BookDetaledHeader\";\r\n\r\nexport default observer(function BookDetails() {\r\n  const { bookStore } = useStore();\r\n  const {\r\n    selectedBook: book,\r\n    loadBook,\r\n    loadingInitial,\r\n    clearSelectedBook,\r\n  } = bookStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadBook(id);\r\n    return () => clearSelectedBook();\r\n  }, [id, loadBook, clearSelectedBook]);\r\n\r\n  if (loadingInitial || !book) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <BookDetailedHeader book={book} />\r\n        <BookDetailedInfo book={book} />\r\n        <BookDetailedChat bookId={book.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <BookDetailedSidebar book={book} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"books/notaguid\")\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"books\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/books\" primary>\r\n            Return to books page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserBook } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Books\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Books\", pane: { key: \"past\" } },\r\n  { menuItem: \"Created and hosted by me\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileBooks() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserBooks, profile, loadingBooks, userBooks } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserBooks(profile!.username);\r\n  }, [loadUserBooks, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserBooks(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingBooks}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Books\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userBooks.map((book: UserBook) => (\r\n              <Card as={Link} to={`/books/${book.id}`} key={book.id}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${book.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{book.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(book.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(book.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\r\nimport ProfileCard from \"./Profile.Card\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile!.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dropZoneStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dropZoneActive = { borderColor: \"green\" };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropZoneStyles, ...dropZoneActive } : dropZoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload \" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                positive\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/photoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"AddPhoto\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileBooks from \"./ProfileBooks\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => <ProfileAbout />,\r\n    },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    {\r\n      menuItem: \"Books you are reading now\",\r\n      render: () => <ProfileBooks />,\r\n    },\r\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile....\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport BookDashboard from \"../../features/books/dashboard/BookDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport HomePage from \"../../features/home/HomePage\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport BookForm from \"../../features/books/form/BookForm\";\nimport BookDetails from \"../../features/books/details/BookDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading app\" />;\n  \n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/books\" component={BookDashboard} />\n                <PrivateRoute path=\"/books/:id\" component={BookDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createBook\", \"/manage/:id\"]}\n                  component={BookForm}\n                />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}